function phone-wired() {
  local mode="${1:-}" usb_devices usb_device

  # sanity checks
  for cmd in adb scrcpy; do
    command -v "$cmd" >/dev/null 2>&1 || { echo "❌ Missing $cmd"; return 1; }
  done

  while true; do
    usb_devices=(${(f)"$(
      adb devices | awk '/device$/{print $1}' | grep -vE '^[0-9]+\.[0-9]+\.[0-9]+:'
    )"})
    if (( ${#usb_devices} == 0 )); then
      echo "📲 Please plug in your phone via USB..."
      sleep 2
    else
      break
    fi
  done

  if (( ${#usb_devices} == 1 )); then
    usb_device="${usb_devices[1]}"
  else
    echo "🔌 Multiple USB devices detected. Select one:"
    usb_device=$(printf "%s\n" "${usb_devices[@]}" | fzf --prompt="Choose USB device: ")
    [[ -z "$usb_device" ]] && echo "❌ No device selected." && return 1
  fi

  echo "🚀 Launching scrcpy on USB device: $usb_device"
  if [[ "$mode" == "full" ]]; then
    scrcpy -s "$usb_device" --fullscreen --audio-buffer=100 --video-bit-rate=8M
  else
    scrcpy -s "$usb_device"
  fi
}

##: Connect phone via Wi-Fi (ADB tcpip) and launch scrcpy
##: Usage: phone-wireless [full]
function phone-wireless() {
  local mode="${1:-}" connected_devices=() wireless_devices=() usb_devices=()
  local d usb_device wireless_device ip wireless_id started_with_usb=0

  # sanity checks
  for cmd in adb scrcpy; do
    command -v "$cmd" >/dev/null 2>&1 || { echo "❌ Missing $cmd"; return 1; }
  done

  echo "NOTE: Press CTRL+C to exit"

  # helper: refresh device lists and partition by presence of ':'
  _pw_refresh() {
    connected_devices=(${(f)"$(adb devices | awk '/device$/{print $1}')"})
    wireless_devices=()
    usb_devices=()
    for d in "${connected_devices[@]}"; do
      if [[ "$d" == *:* ]]; then
        wireless_devices+=("$d")
      else
        usb_devices+=("$d")
      fi
    done
  }

  # loop until we either have a wireless device or at least one USB
  while true; do
    _pw_refresh
    if (( ${#wireless_devices} > 0 )); then
      # already wireless — pick one and launch immediately
      if (( ${#wireless_devices} == 1 )); then
        wireless_device="${wireless_devices[1]}"
      else
        echo "📶 Multiple wireless devices detected. Select one:"
        wireless_device=$(printf "%s\n" "${wireless_devices[@]}" | fzf --prompt="Choose wireless device: ")
        [[ -z "$wireless_device" ]] && echo "❌ No device selected." && return 1
      fi
      echo "📶 Launching scrcpy for: $wireless_device"
      if [[ "$mode" == "full" ]]; then
        scrcpy -s "$wireless_device" --fullscreen --audio-buffer=100 --video-bit-rate=8M
      else
        scrcpy -s "$wireless_device"
      fi
      return 0
    fi

    # no wireless yet — need USB to kick off tcpip
    if (( ${#usb_devices} == 0 )); then
      echo "📲 Please plug in your phone via USB..."
      sleep 2
    else
      started_with_usb=1
      break
    fi
  done

  # Use the first USB device; add fzf here if you want selection
  usb_device="${usb_devices[1]}"
  echo "✅ USB device detected: $usb_device"
  adb -s "$usb_device" tcpip 5555 || { echo "❌ adb tcpip failed"; return 1; }
  sleep 1

  # Get device WLAN IP (strip CIDR if present)
  ip=$(adb -s "$usb_device" shell ip -o -4 addr show wlan0 | awk '{print $4}' | sed 's#/.*##' | head -n1)
  [[ -z "$ip" ]] && { echo "❌ Failed to get IP address from wlan0"; return 1; }

  adb connect "$ip:5555" || { echo "❌ adb connect $ip:5555 failed"; return 1; }
  echo "✅ Connected to $ip:5555"

  # Only wait for unplug if we started wired
  if (( started_with_usb )); then
    echo "🔌 Waiting for USB ($usb_device) to be unplugged..."
    while true; do
      _pw_refresh
      # is the original USB serial still present? if not, break
      local still_usb=0
      for d in "${usb_devices[@]}"; do
        [[ "$d" == "$usb_device" ]] && { still_usb=1; break; }
      done
      (( still_usb )) || break
      sleep 1
    done
    echo "🔌 USB unplugged."
  fi

  wireless_id="${ip}:5555"
  echo "🚀 Launching scrcpy over Wi-Fi: $wireless_id"
  if [[ "$mode" == "full" ]]; then
    scrcpy -s "$wireless_id" --fullscreen --audio-buffer=100 --video-bit-rate=8M
  else
    scrcpy -s "$wireless_id"
  fi
}
